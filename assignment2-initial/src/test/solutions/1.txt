Program([
	VarDecl(aa, IntegerType, IntegerLit(1))
	VarDecl(b, FloatType, FloatLit(2.5))
	VarDecl(c, StringType, StringLit(Hello))
	VarDecl(arr, ArrayType([2, 3], IntegerType))
	FuncDecl(func, AutoType, [Param(x, IntegerType), Param(y, IntegerType)], None, BlockStmt([VarDecl(z, IntegerType), AssignStmt(Id(z), BinExpr(+, Id(x), Id(y))), ReturnStmt(Id(z))]))
	FuncDecl(main, VoidType, [], None, BlockStmt([VarDecl(result, IntegerType), AssignStmt(Id(result), FuncCall(func, [IntegerLit(2), IntegerLit(3)])), IfStmt(BinExpr(>, Id(result), IntegerLit(5)), BlockStmt([CallStmt(printf, StringLit(The result is greater than 5.))]), IfStmt(BinExpr(==, Id(result), IntegerLit(5)), BlockStmt([CallStmt(printf, StringLit(The result is equal to 5.))]), BlockStmt([CallStmt(printf, StringLit(The result is less than 5.))]))), ForStmt(AssignStmt(Id(i), IntegerLit(0)), BinExpr(<, Id(i), IntegerLit(3)), BinExpr(+, Id(i), IntegerLit(1)), BlockStmt([AssignStmt(Id(a), BinExpr(+, Id(a), IntegerLit(1))), IfStmt(BinExpr(>, Id(a), IntegerLit(5)), BlockStmt([BreakStmt()]), BlockStmt([ContinueStmt()]))])), CallStmt(printf, StringLit(The final value of a is %d.), Id(a)), WhileStmt(BinExpr(<, Id(a), IntegerLit(10)), BlockStmt([AssignStmt(Id(a), BinExpr(+, Id(a), IntegerLit(1))), IfStmt(BinExpr(==, BinExpr(%, Id(a), IntegerLit(2)), IntegerLit(0)), BlockStmt([CallStmt(printf, StringLit(%d is even.), Id(a))]), BlockStmt([CallStmt(printf, StringLit(%d is odd.), Id(a))])), ForStmt(AssignStmt(Id(j), IntegerLit(0)), BinExpr(<, Id(j), IntegerLit(3)), BinExpr(+, Id(j), IntegerLit(1)), BlockStmt([AssignStmt(ArrayCell(arr, [BinExpr(%, Id(a), IntegerLit(2)), Id(j)]), BinExpr(+, Id(a), Id(j)))]))])), CallStmt(printf, StringLit(The final value of a is %d.), Id(a)), CallStmt(printf, StringLit(The final value of arr is:)), ForStmt(AssignStmt(Id(i), IntegerLit(0)), BinExpr(<, Id(i), IntegerLit(2)), BinExpr(+, Id(i), IntegerLit(1)), BlockStmt([ForStmt(AssignStmt(Id(j), IntegerLit(0)), BinExpr(<, Id(j), IntegerLit(3)), BinExpr(+, Id(j), IntegerLit(1)), BlockStmt([CallStmt(printf, StringLit(%d ), ArrayCell(arr, [Id(i), Id(j)]))])), CallStmt(printf, StringLit(\n))]))]))
])