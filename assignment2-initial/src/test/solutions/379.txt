Program([
	FuncDecl(reverseWords, StringType, [Param(s, StringType)], None, BlockStmt([BlockStmt([VarDecl(n, IntegerType, FuncCall(length, [Id(s)]))]), BlockStmt([VarDecl(result, IntegerType, StringLit())]), BlockStmt([VarDecl(i, IntegerType, IntegerLit(0))]), WhileStmt(BinExpr(<, Id(i), Id(n)), BlockStmt([WhileStmt(BinExpr(&&, BinExpr(<, Id(i), Id(n)), BinExpr(==, ArrayCell(s, [Id(i)]), StringLit( ))), BlockStmt([AssignStmt(Id(i), BinExpr(+, Id(i), IntegerLit(1)))])), IfStmt(BinExpr(>=, Id(i), Id(n)), BlockStmt([BreakStmt()])), AssignStmt(Id(start), Id(i)), WhileStmt(BinExpr(&&, BinExpr(<, Id(i), Id(n)), BinExpr(!=, ArrayCell(s, [Id(i)]), StringLit( ))), BlockStmt([AssignStmt(Id(i), BinExpr(+, Id(i), IntegerLit(1)))])), AssignStmt(Id(sub), FuncCall(substring, [Id(s), Id(start), BinExpr(-, Id(i), Id(start))])), IfStmt(BinExpr(==, Id(result), StringLit()), BlockStmt([AssignStmt(Id(result), Id(sub))]), BlockStmt([AssignStmt(Id(result), BinExpr(+, BinExpr(+, Id(sub), StringLit( )), Id(result)))]))])), ReturnStmt(Id(result))]))
	FuncDecl(main, VoidType, [], None, BlockStmt([AssignStmt(Id(s), StringLit(the sky is blue)), CallStmt(printString, FuncCall(reverseWords, [Id(s)]))]))
])