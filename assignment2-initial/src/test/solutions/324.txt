Program([
	FuncDecl(isValid, BooleanType, [Param(s, StringType)], None, BlockStmt([IfStmt(BinExpr(!=, BinExpr(%, FuncCall(length, [Id(s)]), IntegerLit(2)), IntegerLit(0)), BlockStmt([ReturnStmt(BooleanLit(False))])), ForStmt(AssignStmt(Id(i), IntegerLit(0)), BinExpr(<, Id(i), FuncCall(length, [Id(s)])), BinExpr(+, Id(i), IntegerLit(1)), BlockStmt([IfStmt(BinExpr(==, ArrayCell(s, [Id(i)]), StringLit(()), BlockStmt([CallStmt(push, ArrayCell(s, [Id(i)]))]), IfStmt(BinExpr(==, ArrayCell(s, [Id(i)]), StringLit())), BlockStmt([IfStmt(BinExpr(==, FuncCall(top, []), StringLit(()), BlockStmt([CallStmt(pop, )]), BlockStmt([ReturnStmt(BooleanLit(False))]))])))])), IfStmt(FuncCall(isEmpty, []), BlockStmt([ReturnStmt(BooleanLit(True))]), BlockStmt([ReturnStmt(BooleanLit(False))]))]))
	FuncDecl(main, VoidType, [], None, BlockStmt([AssignStmt(Id(s), StringLit(((())))), IfStmt(FuncCall(isValid, [Id(s)]), BlockStmt([CallStmt(printString, StringLit(s is valid.))]), BlockStmt([CallStmt(printString, StringLit(s is not valid.))]))]))
])