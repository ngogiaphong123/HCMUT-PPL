Program([
	FuncDecl(intersect, ArrayType([2], IntegerType), [Param(nums1, ArrayType([4], IntegerType)), Param(nums2, ArrayType([2], IntegerType))], None, BlockStmt([AssignStmt(Id(n1), FuncCall(length, [Id(nums1)])), AssignStmt(Id(n2), FuncCall(length, [Id(nums2)])), BlockStmt([VarDecl(result, ArrayType([2], IntegerType), ArrayLit([]))]), ForStmt(AssignStmt(Id(i), IntegerLit(0)), BinExpr(<, Id(i), Id(n1)), BinExpr(+, Id(i), IntegerLit(1)), BlockStmt([ForStmt(AssignStmt(Id(j), IntegerLit(0)), BinExpr(<, Id(j), Id(n2)), BinExpr(+, Id(j), IntegerLit(1)), BlockStmt([IfStmt(BinExpr(==, ArrayCell(nums1, [Id(i)]), ArrayCell(nums2, [Id(j)])), BlockStmt([AssignStmt(Id(result), FuncCall(append, [Id(result), ArrayCell(nums1, [Id(i)])])), AssignStmt(ArrayCell(nums2, [Id(j)]), UnExpr(-, IntegerLit(1))), BreakStmt()]))]))])), ReturnStmt(Id(result))]))
	FuncDecl(main, VoidType, [], None, BlockStmt([AssignStmt(Id(nums1), ArrayLit([IntegerLit(1), IntegerLit(2), IntegerLit(2), IntegerLit(1)])), AssignStmt(Id(nums2), ArrayLit([IntegerLit(2), IntegerLit(2)])), CallStmt(printInt, FuncCall(intersect, [Id(nums1), Id(nums2)]))]))
])